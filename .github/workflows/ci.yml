# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  pull_request:
    branches: [ "master" ]

jobs:
  run-test:
    runs-on: ubuntu-latest
    container: node:18
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: ${{ secrets.PGDATABASE }}
          POSTGRES_PASSWORD: ${{ secrets.PGPASSWORD }}
          POSTGRES_PORT: ${{ secrets.PGPORT }}
          POSTGRES_USER: ${{ secrets.PGUSER }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5     
    steps:
    - uses: actions/checkout@v4
    - name: npm install migrate and test
      run: |
        npm ci
        npm run migrate:test up
        npm run test
      env:
        ACCESS_TOKEN_KEY: ${{ secrets.ACCESS_TOKEN_KEY }}
        REFRESH_TOKEN_KEY: ${{ secrets.REFRESH_TOKEN_KEY }}
        ACCCESS_TOKEN_AGE: ${{ secrets.ACCCESS_TOKEN_AGE }}
        PGHOST_TEST: ${{ secrets.PGHOST_TEST }}
        PGUSER_TEST: ${{ secrets.PGUSER_TEST }}
        PGDATABASE_TEST: ${{ secrets.PGDATABASE_TEST }}
        PGPASSWORD_TEST: ${{ secrets.PGPASSWORD_TEST }}
        PGPORT_TEST: ${{ secrets.PGPORT_TEST }}
        PGHOST: ${{ secrets.PGHOST_TEST }}
        PGUSER: ${{ secrets.PGUSER_TEST }}
        PGDATABASE: ${{ secrets.PGDATABASE_TEST }}
        PGPASSWORD: ${{ secrets.PGPASSWORD_TEST }}
        PGPORT: ${{ secrets.PGPORT_TEST }}
